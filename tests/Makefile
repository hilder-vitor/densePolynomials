#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GOOGLE_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GOOGLE_DIR = googletest

# Where to find user code.
SRC_DIR = ../src

CPPFLAGS += -isystem $(GOOGLE_DIR)/include
CXXFLAGS += -g -Wall -Wextra -pthread

GMP_LIBS =  -lgmpxx -lgmp

GOOGLE_HEADERS = $(GOOGLE_DIR)/include/gtest/*.h \
                $(GOOGLE_DIR)/include/gtest/internal/*.h

GOOGLE_TEST_SRC = $(GOOGLE_DIR)/src/*.cc $(GOOGLE_DIR)/src/*.h $(GOOGLE_HEADERS)


all: gtest_lib_bin poly_operators_test

# compile the google lib in order to include a single header in our tests' sources codes
gtest_lib_bin: $(GOOGLE_TEST_SRC)
	$(CXX) $(CPPFLAGS) -I$(GOOGLE_DIR) $(CXXFLAGS) -c \
            $(GOOGLE_DIR)/src/gtest-all.cc -o $(GOOGLE_DIR)/google_test_lib

# unit tests to operators
poly_operators_test: poly.o gtest_lib_bin poly_operators_test.cpp $(GOOGLE_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) poly_operators_test.cpp $(GOOGLE_DIR)/google_test_lib $(SRC_DIR)/poly.o -lpthread $(GMP_LIBS) -o poly_operators_test

# unit tests to initialisations
poly_operators_test: poly.o gtest_lib_bin poly_initialisations.cpp $(GOOGLE_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) poly_initialisations.cpp $(GOOGLE_DIR)/google_test_lib $(SRC_DIR)/poly.o -lpthread $(GMP_LIBS) -o poly_initialisations_test




poly.o: ../Makefile
	cd .. && make
